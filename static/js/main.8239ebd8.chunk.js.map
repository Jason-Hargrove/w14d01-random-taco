{"version":3,"sources":["TacoInfo.js","App.js","reportWebVitals.js","index.js"],"names":["TacoInfo","props","className","taco","mixin","slug","href","url","name","recipe","base_layer","seasoning","shell","condiment","App","useState","searchURL","query","updateQuery","updateTaco","useEffect","length","a","fetch","response","json","data","console","error","onClick","window","location","reload","Object","keys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRA+BeA,EA/BE,SAACC,GAChB,OACE,sBAAKC,UAAU,SAAf,UACE,yCAAYD,EAAME,KAAKC,MAAMC,QAC7B,6BAAI,mBAAGC,KAAML,EAAME,KAAKC,MAAMG,IAA1B,kCACJ,wCAAWN,EAAME,KAAKC,MAAMI,QAC5B,0CAAaP,EAAME,KAAKC,MAAMK,UAE9B,8CAAiBR,EAAME,KAAKO,WAAWL,QACvC,6BAAI,mBAAGC,KAAML,EAAME,KAAKO,WAAWH,IAA/B,kCACJ,wCAAWN,EAAME,KAAKO,WAAWF,QACjC,0CAAaP,EAAME,KAAKO,WAAWD,UAEnC,6CAAgBR,EAAME,KAAKQ,UAAUN,QACrC,6BAAI,mBAAGC,KAAML,EAAME,KAAKQ,UAAUJ,IAA9B,kCACJ,wCAAWN,EAAME,KAAKQ,UAAUH,QAChC,0CAAaP,EAAME,KAAKQ,UAAUF,UAElC,yCAAYR,EAAME,KAAKS,MAAMP,QAC7B,6BAAI,mBAAGC,KAAML,EAAME,KAAKS,MAAML,IAA1B,kCACJ,wCAAWN,EAAME,KAAKS,MAAMJ,QAC5B,0CAAaP,EAAME,KAAKS,MAAMH,UAE9B,6CAAgBR,EAAME,KAAKU,UAAUR,QACrC,6BAAI,mBAAGC,KAAML,EAAME,KAAKU,UAAUN,IAA9B,kCACJ,wCAAWN,EAAME,KAAKU,UAAUL,QAChC,0CAAaP,EAAME,KAAKU,UAAUJ,cCsBzBK,MA5Cf,SAAab,GAEX,MAAec,mBAAS,uBAAjBP,EAAP,oBAEA,EAA4BO,mBAAS,CACnCC,UAAW,gEADb,mBAAMC,EAAN,KAAaC,EAAb,KAIA,EAA2BH,mBAAS,IAApC,mBAAOZ,EAAP,KAAagB,EAAb,KAqBE,OAlBFC,qBAAU,WACNH,EAAMD,UAAUK,OAAS,GACvB,sBAAC,8BAAAC,EAAA,+EAE0BC,MAAMN,EAAMD,WAFtC,cAESQ,EAFT,gBAGsBA,EAASC,OAH/B,OAGSC,EAHT,OAIGP,EAAW,eAAKO,IAChBR,EAAY,2BAAKD,GAAN,IAAaD,UAAU,MALrC,kDAOKW,QAAQC,MAAR,MAPL,yDAAD,KAUH,CAACX,IAOF,sBAAKf,UAAU,eAAf,UACE,6BAAKM,IACL,8BACE,wBAAQqB,QARd,WACEC,OAAOC,SAASC,QAAO,IAOnB,0CAIF,sBAAM9B,UAAU,OAAhB,SACG+B,OAAOC,KAAK/B,GAAMkB,OAAS,cAAC,EAAD,CAAUlB,KAAMA,IAAW,SC9BhDgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8239ebd8.chunk.js","sourcesContent":["const TacoInfo = (props) => {\n  return (\n    <div className=\"column\">\n      <h2>Mixin: {props.taco.mixin.slug}</h2>\n      <h3><a href={props.taco.mixin.url}>Link to the Recipe</a></h3>\n      <h3>Name: {props.taco.mixin.name}</h3>\n      <h3>Recipe: {props.taco.mixin.recipe}</h3>\n\n      <h2>Base Layer: {props.taco.base_layer.slug}</h2>\n      <h3><a href={props.taco.base_layer.url}>Link to the Recipe</a></h3>\n      <h3>Name: {props.taco.base_layer.name}</h3>\n      <h3>Recipe: {props.taco.base_layer.recipe}</h3>\n\n      <h2>Seasoning: {props.taco.seasoning.slug}</h2>\n      <h3><a href={props.taco.seasoning.url}>Link to the Recipe</a></h3>\n      <h3>Name: {props.taco.seasoning.name}</h3>\n      <h3>Recipe: {props.taco.seasoning.recipe}</h3>\n\n      <h2>Shell: {props.taco.shell.slug}</h2>\n      <h3><a href={props.taco.shell.url}>Link to the Recipe</a></h3>\n      <h3>Name: {props.taco.shell.name}</h3>\n      <h3>Recipe: {props.taco.shell.recipe}</h3>\n\n      <h2>Condiment: {props.taco.condiment.slug}</h2>\n      <h3><a href={props.taco.condiment.url}>Link to the Recipe</a></h3>\n      <h3>Name: {props.taco.condiment.name}</h3>\n      <h3>Recipe: {props.taco.condiment.recipe}</h3>\n    </div>\n  );\n};\n\nexport default TacoInfo;\n","import { useState, useEffect } from \"react\";\nimport './App.css';\nimport TacoInfo from './TacoInfo';\n\nfunction App(props) {\n\n  const [name] = useState(\"Want a Random Taco?\");\n\n  const[query, updateQuery] = useState({\n    searchURL: 'http://taco-randomizer.herokuapp.com/random/?full-tack=true',\n  });\n\n  const [taco, updateTaco] = useState({});\n\n\n  useEffect(() => {\n      query.searchURL.length > 0 &&\n        (async () => {\n          try {\n            const response = await fetch(query.searchURL);\n            const data = await response.json();\n            updateTaco({ ...data });\n            updateQuery({ ...query, searchURL:'' });\n          } catch (e) {\n              console.error(e);\n          }\n        })();\n  }, [query]);\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n    return (\n    <div className=\"page-wrapper\">\n      <h1>{name}</h1>\n      <div>\n        <button onClick={refreshPage}>\n          Click for a Different Taco\n        </button>\n      </div>\n      <main className=\"page\">\n        {Object.keys(taco).length ? <TacoInfo taco={taco} /> : ''}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}